import telebot
from bs4 import BeautifulSoup
import requests
from fuzzywuzzy import fuzz
import time
import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#load_dotenv()

TELEGRAM_TOKEN = '6763137333:AAGIyKBkdM2jg-U54YNn_bJVtNEeWPM0pT4'
bot = telebot.TeleBot(TELEGRAM_TOKEN, parse_mode=None)
users_search = {}

@bot.message_handler(commands=['start'])
def start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = telebot.types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
    btn2 = telebot.types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
    btn3 = telebot.types.KeyboardButton("–ü–†–ò–°–¢–£–ü–ò–ú")
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! –Ø —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞–≤ —Ñ–∏–ª—å–º–æ–≤".format(message.from_user), reply_markup=markup)


@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
        bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ–µ—Ç.. –°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–ª—å–∑—É–µ—à—å—Å—è –±–æ—Ç–æ–º!)")
# -------------------------------------------------------------------------------------------------------------------------------------------
    elif message.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å":
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = telebot.types.KeyboardButton("–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å?")
        btn2 = telebot.types.KeyboardButton("–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?")
        back = telebot.types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1, btn2, back)
        bot.send_message(message.chat.id, text="–ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –Ω–∞–¥–æ –∫–æ–Ω–µ—á–Ω–æ", reply_markup=markup)
# -------------------------------------------------------------------------------------------------------------------------------------------
    elif message.text == "–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å?":
        bot.send_message(message.chat.id, text="–Ø —Å–ø–æ—Å–æ–±–µ–Ω –∏—Å–∫–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ñ–∏–ª—å–º –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—é –≤–æ–∑–º–æ–∂–æ—Å—Ç—å —Å–∫–∞—á–∞—Ç—å –µ–≥–æ —á–µ—Ä–µ–∑ —Å–µ–±—è (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∏–ª—å–º–∞ —É—Å–ª—É–≥–∞ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –ø–ª–∞—Ç–Ω–æ–π)")
# -------------------------------------------------------------------------------------------------------------------------------------------
    elif message.text == "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?":
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = telebot.types.KeyboardButton("–∫–∞–∫ –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º?")
        button2 = telebot.types.KeyboardButton("–∫–∞–∫ –Ω–∞—á–∞—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º –æ–Ω–ª–∞–π–Ω?")
        button3 = telebot.types.KeyboardButton("–∫–∞–∫ —Å–∫–∞—á–∞—Ç—å —Ñ–∏–ª—å–º?")
        button4 = telebot.types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(button1, button2, button3, button4)
        bot.send_message(message.chat.id, text="—â–∞—Å –æ–±—å—è—Å–Ω—é, —á—Ç–æ —Ç–µ–±–µ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ?", reply_markup=markup)
    elif message.text == '–∫–∞–∫ –Ω–∞–π—Ç–∏ —Ñ–∏–ª—å–º?':
        bot.send_message(message.chat.id, text ='–ø–∏—à–µ—à—å –±–æ—Ç—É –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ —Ç–∞–∫ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö, –æ–Ω –µ—Å–ª–∏ —Ñ–∏–ª—å–º –Ω–µ —Å–∏–ª—å–Ω–æ —Å—Ç–∞—Ä—ã–π –Ω–∞–π–¥—ë—Ç –µ–≥–æ —Å —à–∞–Ω—Å–æ–º 75%')
# -------------------------------------------------------------------------------------------------------------------------------------------
    elif message.text == '–∫–∞–∫ –Ω–∞—á–∞—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–º –æ–Ω–ª–∞–π–Ω?':
        bot.send_message(message.chat.id, text = '–ø–æ–≤—Ç–æ—Ä—è–µ—à—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è,'
                                                 '–ø–µ—Ä–µ—Ö–æ–¥–∏—à—å –ø–æ —Å—Å—ã–ª–∫–µ')
# -------------------------------------------------------------------------------------------------------------------------------------------
    elif message.text == '–∫–∞–∫ —Å–∫–∞—á–∞—Ç—å —Ñ–∏–ª—å–º?':
        bot.send_message(message.chat.id, text = '–ø–æ–≤—Ç–æ—Ä—è–µ—à—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ —É–¥–æ—Å—Ç–æ–≤–µ—Ä–∏–≤—à–∏—Å—å, —á—Ç–æ —Ñ–∏–ª—å–º —Ç–æ—Ç —Å–∫–∞—á–∏–≤–∞–µ—à—å')
# -------------------------------------------------------------------------------------------------------------------------------------------
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup3 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = telebot.types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        button2 = telebot.types.KeyboardButton("‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")
        button3 = telebot.types.KeyboardButton("–ü–†–ò–°–¢–£–ü–ò–ú")
        markup3.add(button1, button2, button3)
        bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup3)
#-------------------------------------------------------------------------------------------------------------------------------------------

    elif message.text == '–ü–†–ò–°–¢–£–ü–ò–ú':
        markup2 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        Btn1 = telebot.types.KeyboardButton("–ü–æ—Å–æ–≤–µ—Ç—É–π —Ñ–∏–ª—å–º")
        Btn2 = telebot.types.KeyboardButton("–ù–∞–π–¥–∏ —Ñ–∏–ª—å–º")
        Btn3 = telebot.types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup2.add(Btn1, Btn2, Btn3)
        bot.send_message(message.chat.id, text="—á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç", reply_markup=markup2)


#    elif message.text == '–ü–æ—Å–æ–≤–µ—Ç—É–π —Ñ–∏–ª—å–º':
#        user_ratings_df = pd.read_csv("archive/ratings.csv")
#        user_ratings_df.head()
#       movie_metadata = pd.read_csv("archive/movies_metadata.csv")
#       movie_metadata = movie_names[['title', 'genres']]
#        movie_metadata.head()
#        movie_data = user_ratings_df.merge(movie_metadata, on='movieId')
#        movie_data.head()
#        user_item_matrix = ratings_data.pivot(index=['userId'], columns=['movieId'], values='rating').fillna(0)
#        user_item_matrix
#       # Define a KNN model on cosine similarity
#       cf_knn_model = NearestNeighbors(metric='cosine', algorithm='brute', n_neighbors=10, n_jobs=-1)#
 #       # Fitting the model on our matrix
 #      cf_knn_model.fit(user_item_matrix)

    else:
        markup1 = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        count = 0
        user_request = message.text

        for numder in range(1, 501):
            url = f'https://w140.zona.plus/movies/filter/sort-date?page={numder}'
            r = requests.get(url)
            soup = BeautifulSoup(r.text, 'lxml')

            #            https = 'https://w140.zona.plus/' + soup.find('li', class_='results-item-wrap').find('a', class_='results-item').get('href')
            #            name = soup.find('li', class_='results-item-wrap').find('a', class_='results-item').get('title')
            films = soup.findAll('li', class_='results-item-wrap')

            data = []
            for film in films:

                https = 'https://w140.zona.plus/' + film.find('a', class_='results-item').get('href')
                name = film.find('a', class_='results-item').get('title')

                if fuzz.partial_ratio(user_request, name) >= 80:
                    r_2 = requests.get(https)
                    soup_2 = BeautifulSoup(r_2.text, 'lxml')
                    text_1 = soup_2.find('div', class_='entity-desc-description').text
                    #            genre_1 = soup_2.find('a', class_='entity-desc-link').findall('span', class_='entity-desc-link-u')
                    #            time = soup_2.find("time datetime")
                    data.append([name, text_1, https])
                    count += 1
                    bot.send_message(message.from_user.id, text=name, reply_markup=markup1)
                    bot.send_message(message.from_user.id, text=text_1, reply_markup=markup1)
                    bot.send_message(message.from_user.id, text=https, reply_markup=markup1)
                    break
            if count == 1:
                break
        if count == 0:
            bot.send_message(message.chat.id, text='–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, –Ω–æ –≤ –º–æ–µ–π –±–∞–∑–µ –Ω–µ—Ç —Ç–∞–∫–æ–≥–æ', reply_markup=markup1)

bot.polling(none_stop=True)
